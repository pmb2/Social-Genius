server {
    listen 80;
    server_name _;
    
    # Handle both HTTP and HTTPS traffic (AWS ALB terminates SSL)
    # AWS ALB will send X-Forwarded-Proto header
    
    # For Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # For ALB health checks - suppress all logging
    location /health {
        access_log off;
        error_log /dev/null;
        return 200 'OK';
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # Also handle /api/health for Next.js route
    location /api/health {
        access_log off;
        error_log /dev/null;
        proxy_pass http://app:3000/api/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        # Minimal headers for health check to reduce overhead
    }
    
    # Forward all traffic to app
    location / {
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }
}

# AWS ALB handles SSL termination, so we don't need the 443 block
# server {
#    listen 443 ssl;
#    server_name _;
#    
#    # SSL certificates
#    ssl_certificate /etc/letsencrypt/live/${DOMAIN:-localhost}/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN:-localhost}/privkey.pem;
#    
#    # SSL configuration
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_prefer_server_ciphers on;
#    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
#    ssl_session_timeout 1d;
#    ssl_session_cache shared:SSL:10m;
#    ssl_session_tickets off;
#    
#    # HSTS (optional, be careful with this as it's not easily reversible)
#    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#    
#    # Proxy to Next.js app
#    location / {
#        proxy_pass http://app:3000;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#        proxy_cache_bypass $http_upgrade;
#    }
#}