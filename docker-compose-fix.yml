version: '3.8'
services:
  # HTTPS reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"  # Map directly to port 80 for external access
    volumes:
      - ./src/nginx/conf/simple.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - social_genius_network

  # Frontend and API application
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        DATABASE_URL: postgresql://postgres:postgres@postgres:5432/socialgenius
    environment:
      NODE_ENV: production
      RUNNING_IN_DOCKER: 'true'
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/socialgenius
      NEXTAUTH_URL: https://app.social-genius.com
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-secure-nextauth-secret}
      GOOGLE_REDIRECT_URI: https://app.social-genius.com/api/google-auth/callback
      REDIS_URL: redis://redis:6379
      REDIS_PREFIX: "social-genius:"
      SESSION_TTL: 86400
    restart: unless-stopped
    networks:
      - social_genius_network
    command: ["node", "plain-server.js"]

  # PostgreSQL with pgvector for unified database
  postgres:
    image: pgvector/pgvector:pg14
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: socialgenius
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - social_genius_network
      
  # Redis for session sharing and caching
  redis:
    image: redis:alpine
    container_name: social-genius-redis
    volumes:
      - redis_data:/data
      - ./src/config/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - social_genius_network

networks:
  social_genius_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: