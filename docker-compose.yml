version: '3.8'
services:
  # HTTPS reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - social_genius_network

  # Frontend and API application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:postgres@postgres:5432/socialgenius
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      RUNNING_IN_DOCKER: 'true'
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/socialgenius
      DATABASE_URL_DOCKER: postgresql://postgres:postgres@postgres:5432/socialgenius
      NEXTAUTH_URL: https://localhost
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-secure-nextauth-secret}
      NODE_PG_FORCE_NATIVE: '0'
    restart: unless-stopped
    command: >
      sh -c "
        node node_modules_patch.cjs &&
        npm start
      "
    networks:
      - social_genius_network

  # PostgreSQL with pgvector for unified database
  postgres:
    image: pgvector/pgvector:pg14
    ports:
      - "5435:5432"  # Maps host port 5435 to container port 5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: socialgenius
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - social_genius_network

networks:
  social_genius_network:
    driver: bridge

volumes:
  postgres_data: